generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  member
  admin
}

enum TaskStatus {
  pending
  in_progress
  completed
}

enum TaskPriority {
  low
  medium
  high
}

model User {
  id        String    @id @default(uuid())
  name      String
  email     String    @unique
  password  String
  role      UserRole  @default(member)
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  teams       TeamMember[]
  tasks       Task[]
  taskHistory TaskHistory[]

  @@map("users")
}

model Team {
  id          String    @id @default(uuid())
  name        String
  description String?
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime? @updatedAt @map("updated_at")

  members TeamMember[]
  tasks   Task[]

  @@map("teams")
}

model TeamMember {
  id        String   @id @default(uuid())
  userId    String
  teamId    String
  createdAt DateTime @default(now()) @map("created_at")

  user User @relation(fields: [userId], references: [id])
  team Team @relation(fields: [teamId], references: [id])

  @@unique([userId, teamId])
  @@map("team_members")
}

model Task {
  id          String       @id @default(uuid())
  title       String
  description String?
  status      TaskStatus   @default(pending)
  priority    TaskPriority @default(medium)
  assignedTo  String       @map("assigned_to")
  teamId      String       @map("team_id")
  createdAt   DateTime     @default(now()) @map("created_at")
  updatedAt   DateTime?    @updatedAt @map("updated_at")

  user User @relation(fields: [assignedTo], references: [id])
  team Team @relation(fields: [teamId], references: [id])

  taskHistory TaskHistory[]

  @@map("tasks")
}

model TaskHistory {
  id        String     @id @default(uuid())
  taskId    String     @map("task_id")
  changedBy String     @map("changed_by")
  oldStatus TaskStatus @map("old_status")
  newStatus TaskStatus @map("new_status")
  changedAt DateTime   @default(now()) @map("changed_at")

  task Task @relation(fields: [taskId], references: [id], onDelete: Cascade)
  user User @relation(fields: [changedBy], references: [id])

  @@map("task_history")
}
